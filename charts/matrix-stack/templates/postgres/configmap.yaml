{{- /*
Copyright 2025 New Vector Ltd

SPDX-License-Identifier: AGPL-3.0-only OR LicenseRef-Element-Commercial
*/ -}}

{{- with $.Values.postgres }}
{{- if (include "element-io.postgres.enabled" (dict "root" $)) }}
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    {{- include "element-io.postgres.labels" (dict "root" $ "context" .) | nindent 4 }}
  name: {{ $.Release.Name }}-postgres
  namespace: {{ $.Release.Namespace }}
data:
  configure-dbs.sh: |
    #!/bin/sh
    set -e;
    export POSTGRES_PASSWORD=`cat /secrets/{{
        include "element-io.ess-library.init-secret-path" (
      dict "root" $ "context" (
        dict "secretProperty" .adminPassword
              "initSecretKey" "POSTGRES_ADMIN_PASSWORD"
              "defaultSecretName" (printf "%s-postgres" $.Release.Name)
              "defaultSecretKey" "ADMIN_PASSWORD"
        )
    ) }}`;
{{- range $key := (.essPasswords | keys | uniq | sortAlpha) -}}
{{- if (index $.Values $key).enabled -}}
{{- $prop := index $.Values.postgres.essPasswords $key }}
    export ESS_PASSWORD=`cat /secrets/{{
  include "element-io.ess-library.init-secret-path" (
    dict "root" $ "context" (
      dict "secretProperty" $prop
            "initSecretKey" (printf "POSTGRES_%s_PASSWORD" ($key | upper))
            "defaultSecretName" (printf "%s-postgres" $.Release.Name)
            "defaultSecretKey" (printf "ESS_PASSWORD_%s" ($key | upper))
      )
    ) }}`;
    (
      (echo -n $POSTGRES_PASSWORD | psql -W -U postgres -tc "SELECT 1 FROM pg_catalog.pg_roles WHERE rolname = '{{ $key | lower }}_user'" | grep -q 1) && \
      (echo -n $POSTGRES_PASSWORD | psql -W -U postgres -c "ALTER USER {{ $key | lower }}_user PASSWORD '"$ESS_PASSWORD"'")
    ) || \
      (echo -n $POSTGRES_PASSWORD | psql -W -U postgres -c "CREATE ROLE {{ $key | lower }}_user LOGIN PASSWORD '"$ESS_PASSWORD"'");
    (echo -n $POSTGRES_PASSWORD | psql -W -U postgres -tc "SELECT 1 FROM pg_database WHERE datname = '{{ $key | lower }}'" | grep -q 1) || \
    (echo -n $POSTGRES_PASSWORD | createdb --encoding=UTF8 --locale=C --template=template0 --owner={{ $key | lower }}_user {{ $key | lower }} -U postgres)
{{- end }}
{{- end }}
{{- end -}}
{{- end -}}
