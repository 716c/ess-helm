{{- /*
Copyright 2024 New Vector Ltd

SPDX-License-Identifier: AGPL-3.0-only OR LicenseRef-Element-Commercial
*/ -}}

{{- with .Values.initSecrets -}}
{{- if .enabled -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ $.Release.Name }}-init-secrets
  namespace: {{ $.Release.Namespace }}
  labels:
    {{- include "element-io.init-secrets.labels" (dict "root" $ "context" .) | nindent 4 }}
spec:
  backoffLimit: 6
  completionMode: NonIndexed
  completions: 1
  manualSelector: false
  parallelism: 1
  podReplacementPolicy: TerminatingOrFailed
  template:
{{- with .annotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
{{- end }}
    spec:
      automountServiceAccountToken: false
      serviceAccountName: {{ include "element-io.ess-library.serviceAccountName" (dict "root" $ "context" (dict "serviceAccount" .serviceAccount "key" "init-secrets")) }}
{{- include "element-io.ess-library.pods.pullSecrets" (dict "root" $ "context" $.Values.matrixTools.image) }}
{{- with .podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
{{- end }}
{{- with .nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
{{- end }}
      {{ include "element-io.ess-library.pods.tolerations" (dict "root" $ "context" .tolerations) | nindent 6 }}
{{- with .hostAliases }}
      hostAliases:
        {{- tpl (toYaml . | nindent 8) $ }}
{{- end }}
      containers:
      - name: init-secrets
{{- with $.Values.matrixTools.image -}}
{{- if .digest }}
        image: "{{ .registry }}/{{ .repository }}@{{ .digest }}"
        imagePullPolicy: {{ .pullPolicy | default "IfNotPresent" }}
{{- else }}
        image: "{{ .registry }}/{{ .repository }}:{{ required "matrixTools.image.tag is required if no digest" .tag }}"
        imagePullPolicy: {{ .pullPolicy | default "Always" }}
{{- end }}
{{- end }}
{{- with .containersSecurityContext }}
        securityContext:
          {{- toYaml . | nindent 10 }}
{{- end }}
        command:
        - "/matrix-tools"
        - "generate-secrets"
{{- range $generatedSecret := include "element-io.init-secrets.generated-secrets" (dict "root" $ "context" .) | fromJsonArray }}
        - {{ $generatedSecret }}
{{- end }}
{{- end -}}
{{- end -}}
