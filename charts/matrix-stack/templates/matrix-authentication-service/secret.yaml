{{- /*
Copyright 2025 New Vector Ltd

SPDX-License-Identifier: AGPL-3.0-only OR LicenseRef-Element-Commercial
*/ -}}

{{- with .Values.matrixAuthenticationService -}}
{{- if .enabled -}}
apiVersion: v1
kind: Secret
metadata:
  name: {{ $.Release.Name }}-matrix-authentication-service
  namespace: {{ $.Release.Namespace }}
  labels:
    {{- include "element-io.matrix-authentication-service.labels" (dict "root" $ "context" .) | nindent 4 }}
type: Opaque
data:
{{- with .additional }}
{{- range $key := (. | keys | uniq | sortAlpha) }}
{{- $prop := index $.Values.matrixAuthenticationService.additional $key }}
{{- if $prop.config }}
  user-{{ $key }}: {{ $prop.config | b64enc }}
{{- end }}
{{- end }}
{{- end }}
{{- with .postgres.password }}
{{- include "element-io.ess-library.check-credential" (dict "root" $ "context" (dict "secretPath" "matrixAuthenticationService.postgres.password" "initIfAbsent" false)) }}
{{- with .value }}
  POSTGRES_PASSWORD: {{ . | b64enc }}
{{- end }}
{{- end }}
{{- if $.Values.synapse.enabled }}
{{- include "element-io.ess-library.check-credential" (dict "root" $ "context" (dict "secretPath" "matrixAuthenticationService.synapseSharedSecret" "initIfAbsent" true)) }}
{{- with .synapseSharedSecret }}
{{- with .value }}
  SYNAPSE_SHARED_SECRET: {{ . | b64enc }}
{{- end }}
{{- end }}
{{- include "element-io.ess-library.check-credential" (dict "root" $ "context" (dict "secretPath" "matrixAuthenticationService.synapseOIDCClientSecret" "initIfAbsent" true)) }}
{{- with .synapseOIDCClientSecret }}
{{- with .value }}
  SYNAPSE_OIDC_CLIENT_SECRET: {{ . | b64enc }}
{{- end }}
{{- end }}
{{- end }}
{{- include "element-io.ess-library.check-credential" (dict "root" $ "context" (dict "secretPath" "matrixAuthenticationService.encryptionSecret" "initIfAbsent" true)) }}
{{- with .encryptionSecret }}
{{- with .value }}
  ENCRYPTION_SECRET: {{ . | b64enc }}
{{- end }}
{{- end }}
{{- with required "privateKeys is required for Matrix Authentication Service" .privateKeys }}
{{- include "element-io.ess-library.check-credential" (dict "root" $ "context" (dict "secretPath" "matrixAuthenticationService.privateKeys.rsa" "initIfAbsent" true)) }}
{{- with .rsa }}
{{- with .value }}
  RSA_PRIVATE_KEY: {{ . | b64enc }}
{{- end }}
{{- end }}
{{- include "element-io.ess-library.check-credential" (dict "root" $ "context" (dict "secretPath" "matrixAuthenticationService.privateKeys.ecdsaPrime256v1" "initIfAbsent" true)) }}
{{- with .ecdsaPrime256v1 }}
{{- with .value }}
  ECDSA_PRIME256V1_PRIVATE_KEY: {{ . | b64enc }}
{{- end }}
{{- end }}
{{- with .ecdsaSecp256k1 }}
{{- include "element-io.ess-library.check-credential" (dict "root" $ "context" (dict "secretPath" "matrixAuthenticationService.privateKeys.ecdsaSecp256k1" "initIfAbsent" false)) }}
{{- with .value }}
  ECDSA_SECP256K1_PRIVATE_KEY: {{ . | b64enc }}
{{- end }}
{{- end }}
{{- with .ecdsaSecp384r1 }}
{{- include "element-io.ess-library.check-credential" (dict "root" $ "context" (dict "secretPath" "matrixAuthenticationService.privateKeys.ecdsaSecp384r1" "initIfAbsent" false)) }}
{{- with .value }}
  ECDSA_SECP384R1_PRIVATE_KEY: {{ . | b64enc}}
{{- end }}
{{- end }}
{{- end -}}
{{- end -}}
{{- end -}}
