{{- /*
Copyright 2024 New Vector Ltd

SPDX-License-Identifier: AGPL-3.0-only
*/ -}}

{{- if $.Values.synapse.enabled -}}
{{- with .Values.synapse -}}
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    {{- include "element-io.synapse.labels" (dict "root" $ "context" .) | nindent 4 }}
  name: {{ $.Release.Name }}-synapse-haproxy
  namespace: {{ $.Release.Namespace }}
data:
  path_map_file: |
    # A map file that is used in haproxy config to map from matrix paths to the
    # named backend. The format is: path_regexp backend_name

    {{ $enabledWorkerTypes := keys ((include "element-io.synapse.enabledWorkers" (dict "root" $)) | fromJson) }}
    {{- range $workerType := $enabledWorkerTypes | sortAlpha }}
    {{- $workersPaths := (include "element-io.synapse.process.workerPaths" (dict "root" $ "context" (dict "workerType" $workerType "enabledWorkerTypes" $enabledWorkerTypes))) | fromJsonArray }}
    {{- if len $workersPaths }}
    # {{ $workerType }}
    {{- range $path := $workersPaths }}
    {{ $path }} {{ $workerType }}
    {{- end }}
    {{ end }}
    {{- end }}
  path_map_file_get: |
    # A map file that is used in haproxy config to map from matrix paths to the
    # named backend. The format is: path_regexp backend_name
    {{ if dig "client-reader" "enabled" false $.Values.synapse.workers }}
    ^/_matrix/client/(api/v1|r0|v3|unstable)/pushrules/ client-reader
    {{- end }}
{{- end -}}
{{- end -}}
