# Copyright 2024 New Vector Ltd
#
# SPDX-License-Identifier: AGPL-3.0-only OR LicenseRef-Element-Commercial
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    {{- include "element-io.synapse.haproxy.labels" $ | nindent 4 }}
  name: {{ .Release.Name }}-synapse-haproxy
  namespace: {{ .Release.Namespace }}
data:
  haproxy.cfg: |
    {{- tpl ($.Files.Get "configs/haproxy/haproxy.cfg.tpl") . | nindent 4 }}
  path_map_file: |
    # A map file that is used in haproxy config to map from matrix paths to the
    # named backend. The format is: path_regexp backend_name

    {{ $enabledWorkers := keys .Values.workers }}
    {{- range $workerType := $enabledWorkers | sortAlpha }}
    {{- $workersPaths := (include "element-io.synapse.process.workerPaths" (dict "workerType" $workerType "enabledWorkers" $enabledWorkers)) | fromJsonArray }}
    {{- if len $workersPaths }}
    # {{ $workerType }}
    {{- range $path := $workersPaths }}
    {{ $path }} {{ $workerType }}
    {{- end }}
    {{ end }}
    {{- end }}
  path_map_file_get: |
    # A map file that is used in haproxy config to map from matrix paths to the
    # named backend. The format is: path_regexp backend_name
    {{ if hasKey .Values.workers "client-reader" }}
    ^/_matrix/client/(api/v1|r0|v3|unstable)/pushrules/ client-reader
    {{- end }}
  429.http: |
    HTTP/1.0 429 Too Many Requests
    Cache-Control: no-cache
    Connection: close
    Content-Type: text/html
    access-control-allow-origin: *
    access-control-allow-methods: GET, POST, PUT, DELETE, OPTIONS
    access-control-allow-headers: Origin, X-Requested-With, Content-Type, Accept, Authorization

    <html><body><h1>429 Too Many Requests</h1>
    No server is available to handle this request.
    </body></html>
